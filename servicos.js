/**
Â * servicos.js (Painel do Dono - com controle de visibilidade para a vitrine)
Â */

import { getFirestore, collection, getDocs, doc, deleteDoc, updateDoc } from "https://www.gstatic.com/firebasejs/9.6.7/firebase-firestore.js";
import { getAuth, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/9.6.7/firebase-auth.js";
import { app } from "./firebase-config.js";

const db = getFirestore(app);
const auth = getAuth(app);
const listaServicosDiv = document.getElementById('lista-servicos');

onAuthStateChanged(auth, (user) => {
Â  if (user) {
Â  Â  const uid = user.uid;

Â  Â  async function carregarServicosDoFirebase() {
Â  Â  Â  listaServicosDiv.innerHTML = '<p>Carregando serviÃ§os...</p>';
Â  Â  Â  try {
Â  Â  Â  Â  const servicosUserCollection = collection(db, "users", uid, "servicos");
Â  Â  Â  Â  const snapshot = await getDocs(servicosUserCollection);

Â  Â  Â  Â  if (snapshot.empty) {
Â  Â  Â  Â  Â  listaServicosDiv.innerHTML = '<p>Nenhum serviÃ§o cadastrado. Clique em "Adicionar Novo ServiÃ§o" para comeÃ§ar.</p>';
Â  Â  Â  Â  Â  return;
Â  Â  Â  Â  }

Â  Â  Â  Â  listaServicosDiv.innerHTML = '';
Â  Â  Â  Â  snapshot.forEach(docSnap => {
Â  Â  Â  Â  Â  const servico = docSnap.data();
Â  Â  Â  Â  Â  const servicoId = docSnap.id;
          // CORREÃ‡ÃƒO: Usar 'visivelNaVitrine' para consistÃªncia
Â  Â  Â  Â  Â  const visivel = servico.visivelNaVitrine !== false; 

Â  Â  Â  Â  Â  const el = document.createElement('div');
Â  Â  Â  Â  Â  el.classList.add('servico-item');

Â  Â  Â  Â  Â  el.innerHTML = `
Â  Â  Â  Â  Â  Â  <div class="item-info">
Â  Â  Â  Â  Â  Â  Â  <h3>${servico.nome}</h3>
Â  Â  Â  Â  Â  Â  Â  <p><strong>PreÃ§o:</strong> R$ ${parseFloat(servico.preco || 0).toFixed(2).replace('.', ',')}</p>
Â  Â  Â  Â  Â  Â  Â  <p><strong>DuraÃ§Ã£o:</strong> ${servico.duracao} minutos</p>
Â  Â  Â  Â  Â  Â  Â  <p><strong>Status:</strong>Â 
Â  Â  Â  Â  Â  Â  Â  Â  ${visivel ? '<span style="color:green;">âœ… VisÃ­vel na Vitrine</span>' : '<span style="color:red;">ðŸš« Oculto da Vitrine</span>'}
Â  Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  <div class="item-acoes">
Â  Â  Â  Â  Â  Â  Â  <button class="btn-editar" data-id="${servicoId}">Editar</button>
Â  Â  Â  Â  Â  Â  Â  <button class="btn-excluir" data-id="${servicoId}">Excluir</button>
Â  Â  Â  Â  Â  Â  Â  <button class="btn-vitrine" data-id="${servicoId}" data-visivel="${visivel}">
Â  Â  Â  Â  Â  Â  Â  Â  ${visivel ? 'Ocultar da Vitrine' : 'Mostrar na Vitrine'}
Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  `;
Â  Â  Â  Â  Â  listaServicosDiv.appendChild(el);
Â  Â  Â  Â  });

Â  Â  Â  } catch (error) {
Â  Â  Â  Â  console.error("Erro ao buscar serviÃ§os:", error);
Â  Â  Â  Â  listaServicosDiv.innerHTML = '<p style="color:red;">Erro ao carregar os serviÃ§os.</p>';
Â  Â  Â  }
Â  Â  }

Â  Â  async function excluirServico(id) {
Â  Â  Â  if (confirm("VocÃª tem certeza? Esta aÃ§Ã£o Ã© permanente.")) {
Â  Â  Â  Â  try {
Â  Â  Â  Â  Â  await deleteDoc(doc(db, "users", uid, "servicos", id));
Â  Â  Â  Â  Â  alert("ServiÃ§o excluÃ­do com sucesso.");
Â  Â  Â  Â  Â  carregarServicosDoFirebase();
Â  Â  Â  Â  } catch (error) {
Â  Â  Â  Â  Â  console.error("Erro ao excluir serviÃ§o: ", error);
Â  Â  Â  Â  Â  alert("Erro ao excluir serviÃ§o.");
Â  Â  Â  Â  }
Â  Â  Â  }
Â  Â  }

Â  Â  async function alternarVisibilidadeServico(id, atual) {
Â  Â  Â  try {
Â  Â  Â  Â  const novoStatus = !atual;
Â  Â  Â  Â  await updateDoc(doc(db, "users", uid, "servicos", id), {
          // CORREÃ‡ÃƒO: Usar 'visivelNaVitrine' para consistÃªncia
Â  Â  Â  Â  Â  visivelNaVitrine: novoStatus
Â  Â  Â  Â  });
Â  Â  Â  Â  carregarServicosDoFirebase();
Â  Â  Â  } catch (error) {
Â  Â  Â  Â  console.error("Erro ao atualizar visibilidade:", error);
Â  Â  Â  Â  alert("Erro ao alterar visibilidade.");
Â  Â  Â  }
Â  Â  }

Â  Â  listaServicosDiv.addEventListener('click', (event) => {
Â  Â  Â  const target = event.target;

Â  Â  Â  if (target.classList.contains('btn-editar')) {
Â  Â  Â  Â  window.location.href = `editar-servico.html?id=${target.dataset.id}`;
Â  Â  Â  }

Â  Â  Â  if (target.classList.contains('btn-excluir')) {
Â  Â  Â  Â  excluirServico(target.dataset.id);
Â  Â  Â  }

Â  Â  Â  if (target.classList.contains('btn-vitrine')) {
Â  Â  Â  Â  const id = target.dataset.id;
Â  Â  Â  Â  const atual = target.dataset.visivel === "true";
Â  Â  Â  Â  alternarVisibilidadeServico(id, atual);
Â  Â  Â  }
Â  Â  });

Â  Â  carregarServicosDoFirebase();

Â  } else {
Â  Â  window.location.href = 'login.html';
Â  }
});

